<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="reflectionImage2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Hs+6PNp9Q/h/YapQ0/u+2UUAAAAASUVORK5CYII=
</value>
  </data>
</root>